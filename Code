Code Wars
Completed Codewars Code Below 

***********************************************************************************************
8 kyu						Name Shuffler
Problem:
Write a function that returns a string in which firstname is swapped with last name.
Example(Input --> Output)
"john McClane" --> "McClane john"

Solution:
function nameShuffler(str){
  //Shuffle It
  let strArr = str.split(" ")
  
  let lastFirst = (strArr[1] + " " + strArr[0])
  return lastFirst
}

***********************************************************************************************
8 kyu					Grasshopper - If/else syntax debug
Problem:
If/else syntax debug
While making a game, your partner, Greg, decided to create a function to check if the user is still alive called checkAlive/CheckAlive/check_alive. Unfortunately, Greg made some errors while creating the function.
checkAlive/CheckAlive/check_alive should return true if the player's health is greater than 0 or false if it is 0 or below.

Solution:
function checkAlive (health) {
  if (health <= 0) {
    return false
  } else {
    return true
  }
}

Better
function checkAlive (health) {
  return (health <= 0) ? false : true
  }

Best
function checkAlive (health) {
  return health >0
  }

***********************************************************************************************
8 kyu			Quarter of the year
Problem:
Given a month as an integer from 1 to 12, return to which quarter of the year it belongs as an integer number.
For example: month 2 (February), is part of the first quarter; month 6 (June), is part of the second quarter; and month 11 (November), is part of the fourth quarter.
Constraint:
1 <= month <= 12

Solution:
const quarterOf = (month) => {
  // Your code here
 if (month < 4){
   return 1
 }
  else if (month < 7){
    return 2
  }
  else if (month <10){
    return 3
  }
  else{
    return 4
  }
}

***********************************************************************************************
7 kyu			  Credit Card Mask
Problem:
Usually when you buy something, you're asked whether your credit card number, phone number or answer to your most secret question is still correct. However, since someone could look over your shoulder, you don't want that shown on your screen. Instead, we mask it.
Your task is to write a function maskify, which changes all but the last four characters into '#'.
Examples (input --> output):
"4556364607935616" --> "############5616"
     "64607935616" -->      "#######5616"
               "1" -->                "1"
                "" -->                 ""
// "What was the name of your first pet?"
"Skippy" --> "##ippy"
"Nananananananananananananananana Batman!" --> "####################################man!"

Solution:
function maskify(cc) {
  let newString = [];
  let hashtagSymbol = "#";
  for (let i = 0; i < cc.length -4; i++) {
    newString.push(hashtagSymbol);
  }
  return newString.join('') + cc.slice(-4);
}

Alt
function maskify(cc) {
      let symbol = [];
      for (let i = 0; i < cc.length; i++) {
        if (i < (cc.length - 4))
        {symbol.push("#")}
        else 
        {symbol.push(cc[i])}
      }
//we need .join to turn this from multiple entries in an array to a single string.
      return symbol.join("");
    }

Alt
function maskify(cc) {
// the number after the the -4 is a check for a minimum; that minimum being 0 here
      let replaceThis = Math.max(cc.length - 4, 0);
      let mask = "#";
      let finalProduct = mask.repeat(replaceThis);
      return finalProduct + cc.slice(-4);
    }

Alt
// return masked string
function maskify(cc) {
  let result = '';
  for (let i=0; i<cc.length; i++) {
    if (i<cc.length-4) result += '#';
    else result += cc[i];
  }
  return result;
}

***********************************************************************************************
7 kyu					Find the capitals
Problem:
Instructions
Write a function that takes a single string (word) as argument. The function must return an ordered list containing the indexes of all capital letters in the string.
Example (Input --> Output)
"CodEWaRs" --> [0,3,4,6]

Solution:
var capitals = function (word) {
	// Write your code here
	let capCount = []
	 let newArray = word.split('');
	//This line is regex for a capital letter between capital A and capital Z
	 for(i=0; i<=newArray.length; i++ ){ 
		if (word[i] >= 'A' && word[i] <= 'Z')
			(capCount.push (i))}
	 return (capCount)
  }
//Testing completed code here to ensure it gets the correct results
console.log(capitals("JEForyDFrrDdffD"))
//Console response
(7) [0, 1, 2, 6, 7, 10, 14]

***********************************************************************************************
8 kyu			Job Matching #1
Problem:
Let's build a matchmaking system that helps discover jobs for developers based on a number of factors.
One of the simplest, yet most important factors is compensation. As developers we know how much money we need to support our lifestyle, so we generally have a rough idea of the minimum salary we would be satisfied with.
Let's give this a try. We'll create a function match (job_matching in Python) which takes a candidate and a job, which will return a Boolean indicating whether the job is a valid match for the candidate.

A candidate will have a minimum salary, so it will look like this:
let candidate = {
  minSalary: 120000
}

A job will have a maximum salary, so it will look like this:
let job = {
  maxSalary: 140000
}

If either the candidate's minimum salary or the job's maximum salary is not present, throw an error.
For a valid match, the candidate's minimum salary must be less than or equal to the job's maximum salary. However, let's also include 10% wiggle room (deducted from the candidate's minimum salary) in case the candidate is 
a rockstar who enjoys programming on Codewars in their spare time. The company offering the job may be able to work something out.

Solution:
function match(candidate, job) {
  // is this job a valid match for the candidate?
// Check to see if minSalary and maxSalary are present
  if (!candidate.minSalary || !job.maxSalary) {
    return error
  }
  else if (candidate.minSalary <= job.maxSalary){
    return true
  }
  else if ((.9*candidate.minSalary) <= job.maxSalary){
    return true
  }
  return false
}

***********************************************************************************************
8 kyu			Are You Playing Banjo?
Problem:
Create a function which answers the question "Are you playing banjo?".
If your name starts with the letter "R" or lower case "r", you are playing banjo!
The function takes a name as its only argument, and returns one of the following strings:
name + " plays banjo" 
name + " does not play banjo"
Names given are always valid strings.
function areYouPlayingBanjo(name) {
// Implement me
  let nameTest = name.split("");
   if (nameTest[0] === ("R") || (nameTest[0] ==="r")) {
    return (name + " plays banjo")};
  return (name + " does not play banjo")
}
//test step not needed
console.log(areYouPlayingBanjo("jeff"))
Better
const areYouPlayingBanjo = name => name.startsWith('R') || name.startsWith('r') ? `${name} plays banjo` : `${name} does not play banjo`

***********************************************************************************************
7 kyu			Triangular Treasure
Problem:
Triangular numbers are so called because of the equilateral triangular shape that they occupy when laid out as dots. i.e.
1st (1)   		2nd (3)    	3rd (6)
*          		**        		***
 			*        		**
                     				*
You need to return the nth triangular number. You should return 0 for out of range values:
For example: (Input --> Output)
0 --> 0
2 --> 3
3 --> 6
-10 --> 0

Solution:
(This one works but times out for CodeWars)
// Return the nth triangular number
function triangular( n ) {
  let sum = 0;
  while(n > 0) {
    (sum += n);
    n--;
  }
  return sum
}

Better:
// Return the nth triangular number
const triangular = n => n>0 ? (n*(n+1))/2 : 0

***********************************************************************************************
8 kyu			Jenny's secret message
Problem:
Jenny has written a function that returns a greeting for a user. However, she's in love with Johnny, and would like to greet him slightly different. She added a special case to her function, but she made a mistake.
Can you help her?
function greet(name){
  return "Hello, " + name + "!";
  if(name === "Johnny")
    return "Hello, my love!";
}

Solution:
function greet(name){
  if(name === "Johnny")
    return "Hello, my love!";
  return "Hello, " + name + "!";
}

Alt:
const greet = name => name==="Johnny" ? "Hello, my love!" : "Hello, " + name + "!"

***********************************************************************************************
7 kyu		You're a square!
Problem:
Task
Given an integral number, determine if it's a square number:
In mathematics, a square number or perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself.
The tests will always use some integral number, so don't worry about that in dynamic typed languages.
Examples
-1  =>  false
 0  =>  true
 3  =>  false
 4  =>  true
25  =>  true
26  =>  false

Solution:
var isSquare = function(n){
  if (n < 0){
    return false; // fix me
  }
//Number.isInteger is built-in
//Math.sqrt is built-in
  else if(!Number.isInteger(Math.sqrt(n))){
    return false; // fix me
  }
  return true
}

Better:
const isSquare = n => n<0 || !Number.isInteger(Math.sqrt(n)) ? false : true

***********************************************************************************************
